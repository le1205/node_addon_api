#include <unistd.h>
#include <pthread.h>
#include <termios.h>
#include <sys/types.h>
#include <sys/socket.h> //Add support for sockets
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <string.h>
#include <sys/time.h>
#include <errno.h>
#include <stdlib.h>

#include "../inc/DLMSTranslatorUtils.h"

int main(int argc, char **argv) {
    char systemTitle[] = "3435014090152003";
    char authKey[] = "D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF";
    char blockkey[] = "35F060DED4017670848D1575C83D8559";
    
    std::string rawList[] = {
            "C401C10001060203090C07DE02120216000000FFC400112006123456780203090C07DE02120200000000FFC40011000687654321020300112006223344550203090C07DE02120204000000FFC400110006112233440203001120066655443302030011800611000077",
            "000100010001006EDB0834350140901520036330000000856CA7005CEE7F7FB0206B8863F9D856D8F308A81132A4BAD9F864F1E9496A6C34DE3A73F6858E96EFE2B2720908D36B70F733BEFA067D8ADD0C6E0E90E5B303A85791B29CDEBBCEB2B414C5D0D72E5C138107CE03B57DA1CCA4AAE11D4DB6",
            "000100100001001F601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "00010001001000376135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "6135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "000100100001000DC00141000100002B0101FF0200",
            "C00141000100002B0101FF0200",
            "0001000100100009C40141000600000004",
            "C40141000600000004",
            "000100100001000DC00142000100002A0000FF0200",
            "C00142000100002A0000FF0200",
            "0001000100100016C401420009104D495430303332303135393034303031",
            "C401420009104D495430303332303135393034303031",
            "0001000100010029DB0800000000000000001E30000000053DB018E456775A302D7A5AF064E8062F88CDA3000EE79E8208",
            "DB0800000000000000001E30000000053DB018E456775A302D7A5AF064E8062F88CDA3000EE79E8208",
            "C0014100080000010000FF0200",
            "000100010001002EDB083435014090152003233000000086557C28DE2B8583022EA3C1A690C8A247A459CB6305A8ACAC28A296878F1A",
            "DB083435014090152003233000000086557C28DE2B8583022EA3C1A690C8A247A459CB6305A8ACAC28A296878F1A",
            "C4014100090C07E70A0A020D070D00003C00",
            "000100010001002CDB0800000000000000002130000000063264E0F418384215FDE4F20177AC4A4C9871746C0C33A117966BE45D",
            "DB0800000000000000002130000000063264E0F418384215FDE4F20177AC4A4C9871746C0C33A117966BE45D",
            "C30142000900000A0000FF0101120016",
            "0001000100010021DB0834350140901520031630000000871FC66AF8E5A59453344CBC99657AE2206C",
            "DB0834350140901520031630000000871FC66AF8E5A59453344CBC99657AE2206C",
            "C701420000",
            "000100010001006EDB0834350140901520036330000000889F0AFED8D73608D2FC6C1FE292F35F4EB91B289B0F833950516ABEC5CABE6E45B96A24B0221ABCF2407B00A25B2CC3D6CC512BBB0B62681D9FC8EC6AB41F9D51BE81C2EED0EDF0EE3E6F5BD3DB51CBC7EEDE462F8E253B987F29A86397A7",
            "000100100001001F601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "00010001001000376135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "6135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "000100100001000DC00141000100002B0101FF0200",
            "C00141000100002B0101FF0200",
            "0001000100100009C40141000600000006",
            "C40141000600000006",
            "000100100001000DC00142000100002A0000FF0200",
            "C00142000100002A0000FF0200",
            "0001000100100016C401420009104D495430303332303135393034303031",
            "C401420009104D495430303332303135393034303031",
            "0001000100010039DB0800000000000000002E3000000007474B1B6E8D7F668F8E7650D4FF54DBD3DC4EB5D396C9430F5A3C78E442D8F96173130857EA62F72FA8",
            "DB0800000000000000002E3000000007474B1B6E8D7F668F8E7650D4FF54DBD3DC4EB5D396C9430F5A3C78E442D8F96173130857EA62F72FA8",
            "C101410001000060010AFF02000A0E3131323233333434353536363737",
            "0001000100010020DB083435014090152003153000000089D6863A755B1A4BAB93422D44CA19D426",
            "DB083435014090152003153000000089D6863A755B1A4BAB93422D44CA19D426",
            "C5014100",
            "000100010001002CDB0800000000000000002130000000088AC3A8012F77A2D71DD7034E4FBC5D4B541CC0354F5DC29CE4C73347",
            "DB0800000000000000002130000000088AC3A8012F77A2D71DD7034E4FBC5D4B541CC0354F5DC29CE4C73347",
            "C30142000900000A0000FF0101120016",
            "0001000100010021DB08343501409015200316300000008AF8C9BB24CF1C5EF06D1C2C7594FCF2BF4C",
            "DB08343501409015200316300000008AF8C9BB24CF1C5EF06D1C2C7594FCF2BF4C",
            "C701420000",
            "000100010001006EDB08343501409015200363300000008B5197711E973201760F5BE14BB7C4D6943C031F4A32A2377F763A21398EEFC1E0DB3AC78561738C36FB82ABD61D562DD9C4070419A4A813229DD0A82A378686F40F82C674664818ED54E3B294C7D23DD984D0A37B634EF8C1EEA33A5F561C",
            "000100100001001F601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "601DA109060760857405080101BE10040E01000000065F1F04000000190400",
            "00010001001000376135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "6135A109060760857405080101A203020100A305A103020100A40A04083435014090152003BE10040E0800065F1F040000001000E50007",
            "000100100001000DC00141000100002B0101FF0200",
            "C00141000100002B0101FF0200",
            "0001000100100009C40141000600000008",
            "C40141000600000008",
            "000100100001000DC00142000100002A0000FF0200",
            "C00142000100002A0000FF0200",
            "0001000100100016C401420009104D495430303332303135393034303031",
            "C401420009104D495430303332303135393034303031",
            "0001000100010036DB0800000000000000002B300000000927E93317C6DD8BA4E203ACC12588C8354D0B0F2CA9D75F70629D495AACB5407DA0C3D3B3449A",
            "DB0800000000000000002B300000000927E93317C6DD8BA4E203ACC12588C8354D0B0F2CA9D75F70629D495AACB5407DA0C3D3B3449A",
            "C10141001600000F0001FF02000202090600000A006AFF120001",
            "0001000100010020DB08343501409015200315300000008C8600B1D994BE668FA01A5AEB636923B7",
            "DB08343501409015200315300000008C8600B1D994BE668FA01A5AEB636923B7",
            "C5014100",
            "000100010001003ADB0800000000000000002F300000000A266EE8837EB82CB6922E0536F6F2DD6761B1760D32702DF0C2DD24278BBE23B90CABCDD1898E73C0C32B",
            "DB0800000000000000002F300000000A266EE8837EB82CB6922E0536F6F2DD6761B1760D32702DF0C2DD24278BBE23B90CABCDD1898E73C0C32B",
            "C10142001600000F0001FF040001010202090400000000090514170A0A02",
            "0001000100010020DB08343501409015200315300000008D934E722EF2D3F7EF8A8C69BCA2576FBD",
            "DB08343501409015200315300000008D934E722EF2D3F7EF8A8C69BCA2576FBD",
            "C5014200",
            "000100010001002CDB08000000000000000021300000000B52A71A4F6B115625A01B170BC408D7C452E5915377B2CCE909132E24",
            "DB08000000000000000021300000000B52A71A4F6B115625A01B170BC408D7C452E5915377B2CCE909132E24",
            "C30143000900000A0000FF0101120016",
            "0001000100010021DB08343501409015200316300000008E1ED1B9436EE816A46E1F440DFC3AA12901",
            "DB08343501409015200316300000008E1ED1B9436EE816A46E1F440DFC3AA12901",
            "C701430000"
        };

    std::string xml;
    std::string pdu;
    DLMSTranslatorUtils t;

    t.SetAuthenticationKey(authKey);
    t.SetSystemTitle(systemTitle);
    t.SetBlockCipherKey(blockkey);

    //setup Encrypt parameters
    t.SetSecuritySuite(DLMS_SECURITY_SUITE_V0);
    t.SetSecurity(DLMS_SECURITY_AUTHENTICATION_ENCRYPTION);
    //setup if want to encrypt as a GENERAL_GLO_CIPHERING packet, default : 1
    t.SetFrameCounter(1);

    size_t arraySize = sizeof(rawList) / sizeof(rawList[0]);
    for (size_t i = 0; i < arraySize; ++i) {
        printf("RAW:\n%s\n", rawList[i].c_str());
        
        t.PduToXml(rawList[i].c_str(), xml);
        printf("XML:\n%s\n", xml.c_str());

        t.XmlToPdu(xml.c_str(), pdu, false);
        printf("PDU:\n%s\n", pdu.c_str());

        if (t.IsCipheredCmd(pdu)) {
            t.DecryptPdu(pdu.c_str(), xml, false);
            printf("Ciphered CMD Decrypted PDU:\n%s\n", xml.c_str());
        }else {
            t.EncryptPdu(pdu.c_str(), xml, false);
            printf("Encrypted PDU:\n%s\n", xml.c_str());
        }
            
        t.AddWrapperFrame(1, 1, pdu.c_str(), xml, false);
        printf("Wrapper:\n%s\n", xml.c_str());
        printf("=====================================================================\n");
    }

    return 0;
}
